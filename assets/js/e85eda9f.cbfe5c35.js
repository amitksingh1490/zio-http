"use strict";(self.webpackChunkzio_http_docs=self.webpackChunkzio_http_docs||[]).push([[822],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return v}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),m=c(r),v=o,f=m["".concat(i,".").concat(v)]||m[v]||u[v]||s;return r?n.createElement(f,p(p({ref:t},l),{},{components:r})):n.createElement(f,p({ref:t},l))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,p=new Array(s);p[0]=m;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,p[1]=a;for(var c=2;c<s;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4617:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var n=r(7462),o=r(3366),s=(r(7294),r(3905)),p=["components"],a={},i="HTTPS Server",c={unversionedId:"examples/zio-http-basic-examples/https-server",id:"examples/zio-http-basic-examples/https-server",isDocsHomePage:!1,title:"HTTPS Server",description:"",source:"@site/docs/examples/zio-http-basic-examples/https-server.md",sourceDirName:"examples/zio-http-basic-examples",slug:"/examples/zio-http-basic-examples/https-server",permalink:"/zio-http/docs/examples/zio-http-basic-examples/https-server",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HTTPS Cient",permalink:"/zio-http/docs/examples/zio-http-basic-examples/https-client"},next:{title:"Simple HTTP Client",permalink:"/zio-http/docs/examples/zio-http-basic-examples/simple-client"}},l=[],u={toc:l};function m(e){var t=e.components,r=(0,o.Z)(e,p);return(0,s.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"https-server"},"HTTPS Server"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},'import zhttp.http._\nimport zhttp.service.server.ServerChannelFactory\nimport zhttp.service.server.ServerSSLHandler.{ServerSSLOptions, ctxFromKeystore}\nimport zhttp.service.{EventLoopGroup, Server}\nimport zio._\n\nobject HttpsHelloWorld extends App {\n\n  // Create HTTP route\n  val app: HttpApp[Any, Nothing] = Http.collect[Request] {\n    case Method.GET -> !! / "text" => Response.text("Hello World!")\n    case Method.GET -> !! / "json" => Response.jsonString("""{"greetings": "Hello World!"}""")\n  }\n\n  /**\n   * sslcontext can be created using SslContexBuilder.\n   * In this example an inbuilt API using keystore is used\n   */\n  val sslctx = ctxFromKeystore(getClass.getResourceAsStream("keystore.jks"), "password", "password")\n\n  private val server =\n    Server.port(8090) ++ Server.app(app) ++ Server.ssl(ServerSSLOptions(sslctx))\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] = {\n    server.make.useForever\n      .provideCustomLayer(ServerChannelFactory.auto ++ EventLoopGroup.auto(0))\n      .exitCode\n  }\n}\n')))}m.isMDXComponent=!0}}]);