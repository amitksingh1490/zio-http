"use strict";(self.webpackChunkzio_http_docs=self.webpackChunkzio_http_docs||[]).push([[986],{3905:function(t,e,r){r.d(e,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),c=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},l=function(t){var e=c(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,i(i({ref:e},l),{},{components:r})):n.createElement(f,i({ref:e},l))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2026:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={},p="HTTPS Cient",c={unversionedId:"examples/zio-http-basic-examples/https-client",id:"examples/zio-http-basic-examples/https-client",isDocsHomePage:!1,title:"HTTPS Cient",description:"",source:"@site/docs/examples/zio-http-basic-examples/https-client.md",sourceDirName:"examples/zio-http-basic-examples",slug:"/examples/zio-http-basic-examples/https-client",permalink:"/zio-http/docs/examples/zio-http-basic-examples/https-client",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Simple Server",permalink:"/zio-http/docs/examples/zio-http-basic-examples/hello-world"},next:{title:"HTTPS Server",permalink:"/zio-http/docs/examples/zio-http-basic-examples/https-server"}},l=[],u={toc:l};function m(t){var e=t.components,r=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"https-cient"},"HTTPS Cient"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import io.netty.handler.ssl.SslContextBuilder\nimport zhttp.http.{Header, HttpData}\nimport zhttp.service.client.ClientSSLHandler.ClientSSLOptions\nimport zhttp.service.{ChannelFactory, Client, EventLoopGroup}\nimport zio._\n\nimport java.io.InputStream\nimport java.security.KeyStore\nimport javax.net.ssl.TrustManagerFactory\n\nobject HttpsClient extends App {\n  val env     = ChannelFactory.auto ++ EventLoopGroup.auto()\n  val url     = "https://sports.api.decathlon.com/groups/water-aerobics"\n  val headers = List(Header.host("sports.api.decathlon.com"))\n\n  //Configuring Truststore for https(optional)\n  val trustStore: KeyStore                     = KeyStore.getInstance("JKS")\n  val trustStorePath: InputStream              = getClass.getResourceAsStream("truststore.jks")\n  val trustStorePassword: String               = "changeit"\n  val trustManagerFactory: TrustManagerFactory =\n    TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm)\n\n  trustStore.load(trustStorePath, trustStorePassword.toCharArray)\n  trustManagerFactory.init(trustStore)\n\n  val sslOption: ClientSSLOptions =\n    ClientSSLOptions\n        .CustomSSL(SslContextBuilder.forClient().trustManager(trustManagerFactory).build())\n\n  val program = for {\n    res <- Client.request(url, headers, sslOption)\n    _   <- console.putStrLn {\n      res.content match {\n        case HttpData.CompleteData(data) => data.map(_.toChar).mkString\n        case HttpData.StreamData(_)      => "<Chunked>"\n        case HttpData.Empty              => ""\n      }\n    }\n  } yield ()\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] \n    = program.exitCode.provideCustomLayer(env)\n\n}\n')))}m.isMDXComponent=!0}}]);